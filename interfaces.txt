// DBu - users DB
// DBc - chat DB
// PS - payment system

DBu:
   get user data
   request
   {
      ??? "id": <id>,
      "request": "get",
      "user": "<...>",
      "fields": // all optional, but empty is malformed
      [
         "email",
         "money"
      ]
   }
   answer
   {
      ??? "id": <id>, // same as request
      // only keys from request
      "email": "<email>",
      "money": <money>
   }
   
   change user data
   request
   {
      ??? "id": <id>,
      "request": "set",
      "transaction":
      [
         {
            "action": "set",
            "user": "<...>",
            "field": <"money" / "email" / "password">
            "value": <value>
         },
         {
            "action": "update",
            "user": "<...>",
            "field": "money" // consistency check
            "value": <value> // >0 - add money, <0 - subtract money,
                             // 0 - malformed request (or silent error?)
         }
      ]
   }
   answer
   HTTP ok/error
   
DBc:
   get messages
   request
   {
      ??? "id": <id>,
      "request": "get",
      "user": "<...>",
      "date":
      {
         ??? // your ideas here
      }
   }
   answer
   {
      ??? "id": <id>,
      "messages":
      [
         {
            "user": "<...>",
            "date": "<...>",
            "message": "<...>"
         },
         {...},
         ...
      ]
   }

PS:
   register
   request
   {
      "request": "register",
      "login": "<login>",
      "email": "<email>",
      "password": "<md5(password)>",
      "password2": "<md5(password2)>"
   }
   answer
   HTTP ok/error
   
   authorize
   request
   {
      "request": "authorize",
      "login": "<login>",
      "password": "<md5(password)>"
   }
   answer
   HTTP ok/error
   
   get money
   request
   {
      "request": "get money",
      "login": "<login>"
   }
   answer
   {
      "money": <value>
   }
   
   transfer money
   request
   {
      "request": "transfer money",
      "login": "<login>"
      "receiver": "<receiver login>"
      "amount": <value> // test >0
   }
   answer
   HTTP ok/error
